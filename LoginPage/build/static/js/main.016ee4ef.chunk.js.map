{"version":3,"sources":["imagens/logo.png","components/Styled.js","imagens/olho.png","components/Home.js","components/NewRegister.js","components/Message.js","App.js","reportWebVitals.js","index.js"],"names":["Card","styled","div","ImagemLogo","img","DivMain","ImagemOlho","Home","useState","type","settype","src","Logo","style","color","TextField","placeholder","variant","Olho","onClick","NewRegister","password","setPassword","score","setScore","message","setMessage","email","setemail","handlePasswordInput","event","target","value","useEffect","newScore","length","test","includes","CheckEmail","String","toLowerCase","onChange","error","helperText","min","max","Button","alert","Message","App","screen","setScreen","changeScreen","Register","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.016ee4ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0fc39027.png\";","import styled from 'styled-components';\n\n// aqui escolhi usar Glassmorphism no CSS no CARD, por achar visualmente bonito.\n\nexport const Card = styled.div` \n  position: relative;\n  width: 400px;\n  height: 700px;\n  box-shadow: 20px 20px 50px rgba(0, 0, 0, 0.5);\n  border-radius: 15px;\n  background: rgba(255, 255, 255, 0.1);\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\n  border-left: 1px solid rgba(255, 255, 255, 0.5);\n  backdrop-filter: blur(5px);\n  margin: auto;\n  background-color: #F2F2F2;\n  max-width: 1200px;\n`\n\nexport const ImagemLogo = styled.img`\n    margin: auto;\n    width: 200px;\n    height: 100px;\n    object-fit: cover;\n`\n\n\nexport const DivMain = styled.div`\n    text-align: center;\n    width: 100%;\n    cursor: pointer;\n`\n\nexport const ImagemOlho = styled.img`\n    width: 50px;\n    height: 50px;\n`\n","export default __webpack_public_path__ + \"static/media/olho.217d9099.png\";","import React, { useState} from \"react\";\nimport Logo from '../imagens/logo.png';\nimport {ImagemLogo, DivMain, ImagemOlho} from './Styled'\nimport TextField from '@material-ui/core/TextField';\nimport Olho from '../imagens/olho.png';\n\nexport default function Home(){\n\n    const [type, settype] = useState(\"password\")\n\n    const CheckPassword = () =>{\n        if(type===\"password\"){\n            settype(\"text\")\n        }else{\n            settype(\"password\")\n        }\n    }\n\n    return(\n        <DivMain>\n            <ImagemLogo src={Logo}/><br/><br/>\n            <h3 style={{color: 'green'}}>Entrar</h3><br/>\n            <TextField placeholder=\"Email\" variant=\"outlined\"/><br/><br/>\n            <TextField variant=\"outlined\" type={type} placeholder=\"Senha\"/><br/>\n            <ImagemOlho src={Olho} onClick={CheckPassword}/>\n            <p>Não possui uma conta ainda?</p><br/>\n        </DivMain>\n    )\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport Logo from '../imagens/logo.png';\nimport {ImagemOlho} from './Styled'\nimport Button from '@material-ui/core/Button';\nimport Olho from '../imagens/olho.png';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default function NewRegister(){\n\n    const [password, setPassword] = useState('')\n    const [score, setScore] = useState(0)\n    const [message, setMessage] = useState('Senha fraca')\n    const [type, settype] = useState(\"password\")\n    const [email, setemail] = useState(\"\")\n\n    const handlePasswordInput = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const handleMessage = () => { //funcao para checar força da senha\n        if (score > 0 && score <= 3) {\n          setMessage('Senha fraca')\n        } else if (score >= 4 && score <= 6) {\n          setMessage('Senha média')\n        } else if (score > 6) {\n          setMessage('Senha forte')\n        }\n      }\n\n      useEffect(() => {\n        handleMessage()\n      })\n    \n      useEffect(() => {\n        let newScore = 0\n    \n        if (password.length > 5) {\n          newScore = newScore + 1\n        }\n    \n        if (password.length > 10) {\n          newScore += 2\n        }\n    \n        if (/[A-Z]/.test(password)) {\n          newScore += 1\n        }\n    \n        if (/\\d/.test(password)) {\n          newScore += 1\n        }\n    \n        if (\n          password.includes(\"!\") ||\n          password.includes(\"@\") ||\n          password.includes(\"#\")\n        ) {\n          newScore += 2\n        }\n    \n        setScore(newScore)\n      }, [password])  \n\n      const CheckEmail = () =>{\n        const re=/\\S+@\\S+\\.\\S+/\n        return(\n            !re.test(String(email).toLowerCase())\n        )\n      }\n\n    const CheckPassword = () =>{\n        if(type===\"password\"){\n            settype(\"text\")\n        }else{\n            settype(\"password\")\n        }\n    }\n\n    const pegarInputEmail = (event) => {\n        setemail(\n            event.target.value\n        )\n    }\n\n    const Confirm = () =>{\n        if(password.length<=6){ //se a senha for menor que 6 digitos, mensagem de senha fraca aparece.\n            alert('senha fraca!')\n        }else{\n            alert('cadastrado com sucesso! :)')\n        }\n      }\n    \n   \n    return(\n        <div>\n            <img src={Logo}/>\n            <h3 style={{color: 'green'}}><strong>Novo registro</strong></h3><br/>\n            <TextField placeholder=\"Email\" value={email} variant=\"outlined\" onChange={pegarInputEmail} error={CheckEmail()} helperText={CheckEmail()?'Digite um email valido!':''}/><br/><br/>\n            <TextField variant=\"outlined\" type={type} placeholder=\"Senha\" onChange={handlePasswordInput} src={Olho} value={password}/><br/><br/>\n            <TextField variant=\"outlined\" type={type} placeholder=\"Confirmar senha\" onChange={handlePasswordInput} value={password}/><br/><br/>\n            <ImagemOlho src={Olho} onClick={CheckPassword}/>\n            <p>{message}</p><br/>\n            <progress value={score} min={0} max={7} /><br/><br/>\n            <Button variant=\"contained\" onClick={Confirm}>REGISTRAR-SE</Button><br/><br/><br/>\n        </div>\n    )\n}","import React from \"react\";\nimport Logo from '../imagens/logo.png';\nimport {ImagemLogo} from './Styled';\n\n\nexport default function Message(){\n    return(\n        <div>\n            <ImagemLogo src={Logo}/>\n            <h1 style={{color: 'green'}}>Bem vindo!</h1><br/>\n            <h2 style={{color: '#979797'}}>Agora você é um filiado!</h2><br/>\n            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p><br/>\n        </div>\n    )\n    \n}","import './App.css';\nimport Home from './components/Home'\nimport NewRegister from './components/NewRegister'\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Message from './components/Message';\nimport {Card, DivMain} from './components/Styled'\n\n\nexport default function App() {\n\nconst [screen, setScreen] = useState(0)\n\nconst screenSelector = () => {\n    if(screen===0){ //se tela for 0 = renderizar página home.\n      return (\n        <Home/>\n      )\n    }\n    else if(screen===1){ //se tela por 1 = renderizar página messagem.\n      return (\n        <Message/>\n      )\n    }else if(screen===3){ //se tela por 3 = renderizar página CADASTRO.\n        return (\n          <NewRegister/>\n      )\n    }\n    \n  }\n\n  const changeScreen = () => {\n    if(screen===0){ //se eu estiver na tela home, ir para tela de boas vidas.\n        setScreen(1)\n    }else if(screen===1){ //se eu estiver na tela de boas vindas, voltar para home.\n        setScreen(0)\n    }else if(screen===3){ //se eu estiver na tela de cadastro, voltar para home page.\n        setScreen(0)\n    }\n  }\n\n  const Register = () =>{\n        setScreen(3) \n  }\n\n  const Page = () =>{\n    if(screen===0){\n      return(\n        <div>\n          <p style={{color: 'green'}} onClick={Register}><u><strong>Registre-se aqui</strong></u></p><br/><br/>\n          <Button variant=\"contained\" size=\"large\" onClick={changeScreen}>Entrar</Button><br/><br/>\n        </div>\n      )\n    }\n    if(screen===1){ //esse botao so vai aparecer quando eu estiver na tela 1\n      return(\n        <div> \n          <Button variant=\"outlined\" color=\"secondary\" onClick={changeScreen}>LOGOUT</Button><br/><br/>\n        </div>\n      )\n    }\n\n    if(screen===3){ //esse botao so vai aparecer quando eu estiver na tela 3\n      return(\n        <div>\n          <Button onClick={changeScreen} variant=\"outlined\" color=\"secondary\">Voltar</Button>\n        </div>\n      )\n    }\n  }\n\n  return(\n    <Card>\n      <DivMain>\n        {screenSelector()}\n          {Page()}\n        </DivMain>\n    </Card>\n)\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}